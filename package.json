{
  "name": "code-beacon",
  "displayName": "Code Beacon",
  "publisher": "BitFiddle",
  "description": "Reveals the execution path of Ruby code runs, helping you understand how your code flows.",
  "version": "0.2.2",
  "license": "UNLICENSED",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Debuggers",
    "Visualization",
    "Programming Languages"
  ],
  "keywords": [
    "ruby",
    "debugging",
    "code flow",
    "execution path",
    "visualization"
  ],
  "icon": "resources/code-beacon-icon.png",
  "galleryBanner": {
    "color": "#C80000",
    "theme": "dark"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/CodeBeaconIO/integration-vscode"
  },
  "homepage": "https://github.com/CodeBeaconIO/integration-vscode",
  "bugs": {
    "url": "https://github.com/CodeBeaconIO/integration-vscode/issues"
  },
  "thirdPartyNotices": "THIRD_PARTY_NOTICES.md",
  "activationEvents": [
    "onView:codeBeacon"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "Code Beacon",
      "properties": {
        "code-beacon.dataDir": {
          "type": "string",
          "default": ".code-beacon",
          "description": "Set the root directory name for the data files in the workspace root."
        },
        "code-beacon.rootDir": {
          "type": "string",
          "default": "",
          "description": "Used only in the case of a multi-root workspace. Enable a single root directory by setting its path here."
        },
        "code-beacon.sqliteBinaryPath": {
          "type": "string",
          "default": "",
          "description": "Path to the SQLite binary executable. Required for database operations."
        },
        "code-beacon.tracingEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable tracing of code execution paths."
        },
        "code-beacon.remoteTracing.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Allow the Ruby gem to perform tracing (VS Code acts as a permission gate)"
        },
        "code-beacon.remoteTracing.configFile": {
          "type": "string",
          "default": "tracer_config.yml",
          "description": "Configuration file name for remote tracing"
        },
        "code-beacon.remoteTracing.autoRefresh": {
          "type": "boolean",
          "default": true,
          "description": "Automatically refresh when remote tracing state changes"
        }
      }
    },
    "commands": [
      {
        "command": "codeBeacon.toggleRemoteTracing",
        "title": "Toggle Remote Tracing",
        "category": "Code Beacon",
        "icon": "$(shield)"
      },
      {
        "command": "codeBeacon.allowRemoteTracing",
        "title": "Allow Remote Tracing",
        "category": "Code Beacon",
        "icon": "$(play-circle)"
      },
      {
        "command": "codeBeacon.blockRemoteTracing",
        "title": "Block Remote Tracing",
        "category": "Code Beacon",
        "icon": "$(stop-circle)"
      },
      {
        "command": "codeBeacon.openRemoteTracingConfig",
        "title": "Open Remote Tracing Configuration",
        "category": "Code Beacon",
        "icon": "$(gear)"
      },
      {
        "command": "codeBeacon.handleRemoteTracingError",
        "title": "Handle Remote Tracing ConfigurationError",
        "category": "Code Beacon",
        "icon": "$(warning)"
      },
      {
        "command": "codeBeacon.excludeRecordingLikeThis",
        "title": "Exclude Recording Like This",
        "category": "Code Beacon",
        "icon": "$(circle-slash)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "codeBeacon",
          "title": "Code Beacon",
          "icon": "resources/code-beacon-icon.png"
        }
      ]
    },
    "views": {
      "codeBeacon": [
        {
          "id": "appTree",
          "name": "App Method Calls"
        },
        {
          "id": "recordingsTree",
          "name": "Recordings"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "recordingsTree",
        "contents": "Loading...",
        "when": "codeBeaconContext.welcome == 'workspaceFound'"
      },
      {
        "view": "recordingsTree",
        "contents": "Open a workspace to activate this extension.",
        "when": "codeBeaconContext.welcome == 'workspaceNotFound'"
      },
      {
        "view": "recordingsTree",
        "contents": "Configure the 'code-beacon.rootDir' setting and restart to enable this extension.",
        "when": "codeBeaconContext.welcome == 'rootNotSet'"
      },
      {
        "view": "recordingsTree",
        "contents": "Run a trace to activate this extension.",
        "when": "codeBeaconContext.welcome == 'dbMissing'"
      },
      {
        "view": "recordingsTree",
        "contents": "SQLite binary path is not configured. Please set the 'code-beacon.sqliteBinaryPath' setting. If you configure this directly in the settings, you will need to reload VS Code for changes to take effect.",
        "when": "codeBeaconContext.welcome == 'sqlitePathNotSet'"
      },
      {
        "view": "appTree",
        "contents": "Loading...",
        "when": "codeBeaconContext.welcome == 'loadingAppTree'"
      },
      {
        "view": "appTree",
        "contents": "Select a trace recording to load method calls.",
        "when": "codeBeaconContext.welcome == 'workspaceFound'"
      },
      {
        "view": "appTree",
        "contents": "Open a workspace to activate this extension.",
        "when": "codeBeaconContext.welcome == 'workspaceNotFound'"
      },
      {
        "view": "appTree",
        "contents": "Configure the 'code-beacon.rootDir' setting and restart to enable this extension.",
        "when": "codeBeaconContext.welcome == 'rootNotSet'"
      },
      {
        "view": "appTree",
        "contents": "SQLite binary path is not configured. Please set the 'code-beacon.sqliteBinaryPath' setting. If you configure this directly in the settings, you will need to reload VS Code for changes to take effect.",
        "when": "codeBeaconContext.welcome == 'sqlitePathNotSet'"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "codeBeacon.allowRemoteTracing",
          "when": "view == recordingsTree && codeBeacon.remoteTracing.state == 'blocked'",
          "group": "navigation"
        },
        {
          "command": "codeBeacon.blockRemoteTracing",
          "when": "view == recordingsTree && codeBeacon.remoteTracing.state == 'allowed'",
          "group": "navigation"
        },
        {
          "command": "codeBeacon.handleRemoteTracingError",
          "when": "view == recordingsTree && codeBeacon.remoteTracing.state == 'error'",
          "group": "navigation"
        },
        {
          "command": "codeBeacon.openRemoteTracingConfig",
          "when": "view == recordingsTree",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "codeBeacon.excludeRecordingLikeThis",
          "when": "view == recordingsTree && viewItem == recording",
          "group": "inline"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "clean": "rm -rf out",
    "compile": "npm run clean && tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@eslint/js": "^9.8.0",
    "@types/eslint__js": "^8.42.3",
    "@types/js-yaml": "^4.0.9",
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "eslint": "^8.54.0",
    "typescript": "^5.3.2",
    "typescript-eslint": "^8.0.1"
  },
  "dependencies": {
    "async-mutex": "^0.5.0",
    "js-yaml": "^4.1.0"
  }
}
